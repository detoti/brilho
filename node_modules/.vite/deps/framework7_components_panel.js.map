{
  "version": 3,
  "sources": ["../../framework7/components/panel/swipe-panel.js", "../../framework7/components/panel/resizable-panel.js", "../../framework7/components/panel/panel-class.js", "../../framework7/components/panel/panel.js"],
  "sourcesContent": ["import $ from '../../shared/dom7.js';\nimport { extend, now, nextFrame } from '../../shared/utils.js';\nfunction swipePanel(panel) {\n  const app = panel.app;\n  if (panel.swipeInitialized) {\n    return;\n  }\n  extend(panel, {\n    swipeable: true,\n    swipeInitialized: true\n  });\n  const params = panel.params;\n  const {\n    $el,\n    $backdropEl,\n    side,\n    effect\n  } = panel;\n  let otherPanel;\n  let isTouched;\n  let isGestureStarted;\n  let isMoved;\n  let isScrolling;\n  let isInterrupted;\n  const touchesStart = {};\n  let touchStartTime;\n  let touchesDiff;\n  let translate;\n  let backdropOpacity;\n  let panelWidth;\n  let direction;\n  let $viewEl;\n  let touchMoves = 0;\n  function handleTouchStart(e) {\n    if (!panel.swipeable || isGestureStarted) return;\n    if (!app.panel.allowOpen || !params.swipe && !params.swipeOnlyClose || isTouched) return;\n    if ($('.modal-in:not(.toast):not(.notification), .photo-browser-in').length > 0) return;\n    otherPanel = app.panel.get(side === 'left' ? 'right' : 'left') || {};\n    const otherPanelOpened = otherPanel.opened && otherPanel.$el && !otherPanel.$el.hasClass('panel-in-breakpoint');\n    if (!panel.opened && otherPanelOpened) {\n      return;\n    }\n    if (!params.swipeOnlyClose) {\n      if (otherPanelOpened) return;\n    }\n    if (e.target && e.target.nodeName.toLowerCase() === 'input' && e.target.type === 'range') return;\n    if ($(e.target).closest('.range-slider, swiper-container.tabs, .calendar-months, .no-swipe-panel, .card-opened').length > 0) return;\n    touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    if (params.swipeOnlyClose && !panel.opened) {\n      return;\n    }\n    if (params.swipeActiveArea && !panel.opened) {\n      if (side === 'left') {\n        if (touchesStart.x > params.swipeActiveArea) return;\n      }\n      if (side === 'right') {\n        if (touchesStart.x < app.width - params.swipeActiveArea) return;\n      }\n    }\n    touchMoves = 0;\n    $viewEl = $(panel.getViewEl());\n    isMoved = false;\n    isTouched = true;\n    isScrolling = undefined;\n    isInterrupted = false;\n    touchStartTime = now();\n    direction = undefined;\n  }\n  function handleTouchMove(e) {\n    if (!isTouched || isGestureStarted || isInterrupted) return;\n    touchMoves += 1;\n    if (touchMoves < 2) return;\n    if (e.f7PreventSwipePanel || app.preventSwipePanelBySwipeBack || app.preventSwipePanel) {\n      isTouched = false;\n      return;\n    }\n    const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n    if (typeof isScrolling === 'undefined') {\n      isScrolling = !!(isScrolling || Math.abs(pageY - touchesStart.y) > Math.abs(pageX - touchesStart.x));\n    }\n    if (isScrolling) {\n      isTouched = false;\n      return;\n    }\n    if (!direction) {\n      if (pageX > touchesStart.x) {\n        direction = 'to-right';\n      } else {\n        direction = 'to-left';\n      }\n      if (params.swipeActiveArea > 0 && !panel.opened) {\n        if (side === 'left' && touchesStart.x > params.swipeActiveArea) {\n          isTouched = false;\n          return;\n        }\n        if (side === 'right' && touchesStart.x < app.width - params.swipeActiveArea) {\n          isTouched = false;\n          return;\n        }\n      }\n      if ($el.hasClass('panel-in-breakpoint')) {\n        isTouched = false;\n        return;\n      }\n      if (side === 'left' && direction === 'to-left' && !$el.hasClass('panel-in') || side === 'right' && direction === 'to-right' && !$el.hasClass('panel-in')) {\n        isTouched = false;\n        return;\n      }\n    }\n    let threshold = panel.opened ? 0 : -params.swipeThreshold;\n    if (side === 'right') threshold = -threshold;\n    if (!isMoved) {\n      if (!panel.opened) {\n        panel.insertToRoot();\n        $el.addClass('panel-in-swipe');\n        if ($backdropEl) $backdropEl.css('visibility', 'visible');\n        $el.trigger('panel:swipeopen');\n        panel.emit('local::swipeOpen panelSwipeOpen', panel);\n      }\n      panelWidth = $el[0].offsetWidth;\n      if (effect === 'reveal' && $el.hasClass('panel-in-collapsed')) {\n        panelWidth -= parseFloat($viewEl.css(`margin-${side}`));\n      }\n      $el.transition(0);\n    }\n    isMoved = true;\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n    touchesDiff = pageX - touchesStart.x + threshold;\n    const startTranslate = effect === 'floating' ? 8 : 0;\n    if (side === 'right') {\n      if (effect === 'cover' || effect === 'push' || effect === 'floating') {\n        translate = touchesDiff + (panel.opened ? startTranslate : panelWidth);\n        if (translate < 0 - startTranslate) translate = -startTranslate;\n        if (translate > panelWidth) {\n          translate = panelWidth;\n        }\n      } else {\n        translate = touchesDiff - (panel.opened ? panelWidth : 0);\n        if (translate > 0) translate = 0;\n        if (translate < -panelWidth) {\n          translate = -panelWidth;\n        }\n      }\n    } else {\n      translate = touchesDiff + (panel.opened ? panelWidth : startTranslate);\n      if (translate < 0) translate = 0;\n      if (translate > panelWidth + startTranslate) {\n        translate = panelWidth + startTranslate;\n      }\n    }\n    const noFollowProgress = Math.abs(translate / panelWidth);\n    if (effect === 'reveal') {\n      if (!params.swipeNoFollow) {\n        $viewEl.transform(`translate3d(${translate}px,0,0)`).transition(0);\n        if ($backdropEl) $backdropEl.transform(`translate3d(${translate}px,0,0)`).transition(0);\n      }\n      $el.trigger('panel:swipe', Math.abs(translate / panelWidth));\n      panel.emit('local::swipe panelSwipe', panel, Math.abs(translate / panelWidth));\n    } else {\n      if (side === 'left') translate -= panelWidth;\n      if (!params.swipeNoFollow) {\n        backdropOpacity = 1 - Math.abs(translate / panelWidth);\n        if ($backdropEl) {\n          $backdropEl.transition(0);\n          $backdropEl.css({\n            opacity: backdropOpacity\n          });\n        }\n        $el.transform(`translate3d(${translate}px,0,0)`).transition(0);\n        if (effect === 'push') {\n          const viewTranslate = side === 'left' ? translate + panelWidth : translate - panelWidth;\n          $viewEl.transform(`translate3d(${viewTranslate}px,0,0)`).transition(0);\n          if ($backdropEl) {\n            $backdropEl.transform(`translate3d(${viewTranslate}px,0,0)`).transition(0);\n          }\n        }\n      }\n      $el.trigger('panel:swipe', Math.abs(translate / panelWidth));\n      panel.emit('local::swipe panelSwipe', panel, Math.abs(translate / panelWidth));\n    }\n    if (params.swipeNoFollow) {\n      const stateChanged = panel.opened && noFollowProgress === 0 || !panel.opened && noFollowProgress === 1;\n      if (stateChanged) {\n        isInterrupted = true;\n        // eslint-disable-next-line\n        handleTouchEnd(e);\n      }\n    }\n  }\n  function handleTouchEnd(e) {\n    if (!isTouched || !isMoved) {\n      isTouched = false;\n      isMoved = false;\n      return;\n    }\n    const isGesture = e.type === 'gesturestart' || isGestureStarted;\n    isTouched = false;\n    isMoved = false;\n    const timeDiff = new Date().getTime() - touchStartTime;\n    let action;\n    const startTranslate = effect === 'floating' ? side === 'left' ? 8 : -8 : 0;\n    const edge = (translate === startTranslate || Math.abs(translate) === panelWidth) && !params.swipeNoFollow;\n    const threshold = params.swipeThreshold || 0;\n    if (isGesture) {\n      action = 'reset';\n    } else if (!panel.opened) {\n      if (Math.abs(touchesDiff) < threshold) {\n        action = 'reset';\n      } else if (effect === 'cover' || effect === 'push' || effect === 'floating') {\n        if (translate === 0 + startTranslate) {\n          action = 'swap'; // open\n        } else if (timeDiff < 300 && Math.abs(translate) > 0) {\n          action = 'swap'; // open\n        } else if (timeDiff >= 300 && Math.abs(translate) < panelWidth / 2) {\n          action = 'swap'; // open\n        } else {\n          action = 'reset'; // close\n        }\n      } else if (translate === 0) {\n        action = 'reset';\n      } else if (timeDiff < 300 && Math.abs(translate) > 0 || timeDiff >= 300 && Math.abs(translate) >= panelWidth / 2) {\n        action = 'swap';\n      } else {\n        action = 'reset';\n      }\n    } else if (effect === 'cover' || effect === 'push' || effect === 'floating') {\n      if (translate === 0) {\n        action = 'reset'; // open\n      } else if (timeDiff < 300 && Math.abs(translate) > 0) {\n        action = 'swap'; // open\n      } else if (timeDiff >= 300 && Math.abs(translate) < panelWidth / 2) {\n        action = 'reset'; // open\n      } else {\n        action = 'swap'; // close\n      }\n    } else if (translate === -panelWidth) {\n      action = 'reset';\n    } else if (timeDiff < 300 && Math.abs(translate) >= 0 || timeDiff >= 300 && Math.abs(translate) <= panelWidth / 2) {\n      if (side === 'left' && translate === panelWidth) action = 'reset';else action = 'swap';\n    } else {\n      action = 'reset';\n    }\n    if (action === 'swap') {\n      if (panel.opened) {\n        panel.close(!edge);\n      } else {\n        panel.open(!edge);\n      }\n    }\n    let removePanelInClass = true;\n    if (action === 'reset') {\n      if (!panel.opened) {\n        if (edge) {\n          // edge position\n          $el.removeClass('panel-in-swipe');\n        } else {\n          removePanelInClass = false;\n          const target = effect === 'reveal' ? $viewEl : $el;\n          panel.setStateClasses('before-closing');\n          target.transitionEnd(() => {\n            if ($el.hasClass('panel-in')) return;\n            $el.removeClass('panel-in-swipe');\n            panel.setStateClasses('after-closing');\n          });\n        }\n      }\n    }\n    if (effect === 'reveal' || effect === 'push') {\n      nextFrame(() => {\n        $viewEl.transition('');\n        $viewEl.transform('');\n      });\n    }\n    if (removePanelInClass) {\n      $el.removeClass('panel-in-swipe');\n    }\n    $el.transition('').transform('');\n    if ($backdropEl) {\n      $backdropEl.transform('').transition('').css({\n        opacity: '',\n        visibility: ''\n      });\n    }\n  }\n  function handleGestureStart(e) {\n    isGestureStarted = true;\n    handleTouchEnd(e);\n  }\n  function handleGestureEnd() {\n    isGestureStarted = false;\n  }\n\n  // Add Events\n  app.on('touchstart:passive', handleTouchStart);\n  app.on('touchmove:active', handleTouchMove);\n  app.on('touchend:passive', handleTouchEnd);\n  app.on('gesturestart', handleGestureStart);\n  app.on('gestureend', handleGestureEnd);\n  panel.on('panelDestroy', () => {\n    app.off('touchstart:passive', handleTouchStart);\n    app.off('touchmove:active', handleTouchMove);\n    app.off('touchend:passive', handleTouchEnd);\n    app.off('gesturestart', handleGestureStart);\n    app.off('gestureend', handleGestureEnd);\n  });\n}\nexport default swipePanel;", "import $ from '../../shared/dom7.js';\nimport { extend, nextFrame } from '../../shared/utils.js';\nimport { getSupport } from '../../shared/get-support.js';\nfunction resizablePanel(panel) {\n  const app = panel.app;\n  const support = getSupport();\n  if (panel.resizableInitialized) return;\n  extend(panel, {\n    resizable: true,\n    resizableWidth: null,\n    resizableInitialized: true\n  });\n  const $htmlEl = $('html');\n  const {\n    $el,\n    $backdropEl,\n    side,\n    effect\n  } = panel;\n  if (!$el) return;\n  let isTouched;\n  let isMoved;\n  const touchesStart = {};\n  let touchesDiff;\n  let panelWidth;\n  let $viewEl;\n  let panelMinWidth;\n  let panelMaxWidth;\n  let visibleByBreakpoint;\n  const isPushingPanel = effect !== 'cover' && effect !== 'floating';\n  function transformCSSWidth(v) {\n    if (!v) return null;\n    if (v.indexOf('%') >= 0 || v.indexOf('vw') >= 0) {\n      return parseInt(v, 10) / 100 * app.width;\n    }\n    const newV = parseInt(v, 10);\n    if (Number.isNaN(newV)) return null;\n    return newV;\n  }\n  function isResizable() {\n    return panel.resizable && $el.hasClass('panel-resizable');\n  }\n  function handleTouchStart(e) {\n    if (!isResizable()) return;\n    touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    isMoved = false;\n    isTouched = true;\n    panelMinWidth = transformCSSWidth($el.css('min-width'));\n    panelMaxWidth = transformCSSWidth($el.css('max-width'));\n    visibleByBreakpoint = $el.hasClass('panel-in-breakpoint');\n  }\n  function handleTouchMove(e) {\n    if (!isTouched) return;\n    const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    if (!isMoved) {\n      panelWidth = $el[0].offsetWidth;\n      $el.transition(0);\n      $el.addClass('panel-resizing');\n      $htmlEl.css('cursor', 'col-resize');\n      if (isPushingPanel || visibleByBreakpoint) {\n        $viewEl = $(panel.getViewEl());\n        if (panel.$containerEl && panel.$containerEl.hasClass('page')) {\n          $viewEl.add(panel.$containerEl.children('.page-content, .tabs, .fab'));\n        }\n      }\n      if (isPushingPanel && !visibleByBreakpoint) {\n        $backdropEl.transition(0);\n        $viewEl.transition(0);\n      }\n    }\n    isMoved = true;\n    e.preventDefault();\n    touchesDiff = pageX - touchesStart.x;\n    let newPanelWidth = side === 'left' ? panelWidth + touchesDiff : panelWidth - touchesDiff;\n    if (panelMinWidth && !Number.isNaN(panelMinWidth)) {\n      newPanelWidth = Math.max(newPanelWidth, panelMinWidth);\n    }\n    if (panelMaxWidth && !Number.isNaN(panelMaxWidth)) {\n      newPanelWidth = Math.min(newPanelWidth, panelMaxWidth);\n    }\n    newPanelWidth = Math.min(Math.max(newPanelWidth, 0), app.width);\n    panel.resizableWidth = newPanelWidth;\n    $el[0].style.width = `${newPanelWidth}px`;\n    if (isPushingPanel && !visibleByBreakpoint) {\n      if ($viewEl) {\n        $viewEl.transform(`translate3d(${side === 'left' ? newPanelWidth : -newPanelWidth}px, 0, 0)`);\n      }\n      if ($backdropEl) {\n        $backdropEl.transform(`translate3d(${side === 'left' ? newPanelWidth : -newPanelWidth}px, 0, 0)`);\n      }\n    } else if (visibleByBreakpoint && $viewEl) {\n      $viewEl.css(`margin-${side}`, `${newPanelWidth}px`);\n    }\n    $el.trigger('panel:resize', newPanelWidth);\n    panel.emit('local::resize panelResize', panel, newPanelWidth);\n  }\n  function handleTouchEnd() {\n    $('html').css('cursor', '');\n    if (!isTouched || !isMoved) {\n      isTouched = false;\n      isMoved = false;\n      return;\n    }\n    isTouched = false;\n    isMoved = false;\n    $htmlEl[0].style.setProperty(`--f7-panel-${side}-width`, `${panel.resizableWidth}px`);\n    $el[0].style.width = '';\n    if (isPushingPanel && !visibleByBreakpoint) {\n      $viewEl.transform('');\n      $backdropEl.transform('');\n    }\n    $el.removeClass('panel-resizing');\n    nextFrame(() => {\n      $el.transition('');\n      if (isPushingPanel) {\n        $backdropEl.transition('');\n        if ($viewEl) $viewEl.transition('');\n      }\n    });\n  }\n  function handleResize() {\n    if (!panel.opened || !panel.resizableWidth) return;\n    panelMinWidth = transformCSSWidth($el.css('min-width'));\n    panelMaxWidth = transformCSSWidth($el.css('max-width'));\n    if (panelMinWidth && !Number.isNaN(panelMinWidth) && panel.resizableWidth < panelMinWidth) {\n      panel.resizableWidth = Math.max(panel.resizableWidth, panelMinWidth);\n    }\n    if (panelMaxWidth && !Number.isNaN(panelMaxWidth) && panel.resizableWidth > panelMaxWidth) {\n      panel.resizableWidth = Math.min(panel.resizableWidth, panelMaxWidth);\n    }\n    panel.resizableWidth = Math.min(Math.max(panel.resizableWidth, 0), app.width);\n    $htmlEl[0].style.setProperty(`--f7-panel-${side}-width`, `${panel.resizableWidth}px`);\n  }\n  if (panel.$el.find('.panel-resize-handler').length === 0) {\n    panel.$el.append('<div class=\"panel-resize-handler\"></div>');\n  }\n  panel.$resizeHandlerEl = panel.$el.children('.panel-resize-handler');\n  $el.addClass('panel-resizable');\n\n  // Add Events\n  const passive = support.passiveListener ? {\n    passive: true\n  } : false;\n  panel.$el.on(app.touchEvents.start, '.panel-resize-handler', handleTouchStart, passive);\n  app.on('touchmove:active', handleTouchMove);\n  app.on('touchend:passive', handleTouchEnd);\n  app.on('resize', handleResize);\n  panel.on('beforeOpen', handleResize);\n  panel.once('panelDestroy', () => {\n    $el.removeClass('panel-resizable');\n    panel.$resizeHandlerEl.remove();\n    panel.$el.off(app.touchEvents.start, '.panel-resize-handler', handleTouchStart, passive);\n    app.off('touchmove:active', handleTouchMove);\n    app.off('touchend:passive', handleTouchEnd);\n    app.off('resize', handleResize);\n    panel.off('beforeOpen', handleResize);\n  });\n}\nexport default resizablePanel;", "import { getDocument } from 'ssr-window';\nimport $ from '../../shared/dom7.js';\nimport { extend, deleteProps } from '../../shared/utils.js';\nimport Framework7Class from '../../shared/class.js';\nimport swipePanel from './swipe-panel.js';\nimport resizablePanel from './resizable-panel.js';\nclass Panel extends Framework7Class {\n  constructor(app, params) {\n    if (params === void 0) {\n      params = {};\n    }\n    const extendedParams = extend({\n      on: {}\n    }, app.params.panel, params);\n    super(extendedParams, [app]);\n    const panel = this;\n    panel.params = extendedParams;\n    panel.$containerEl = panel.params.containerEl ? $(panel.params.containerEl).eq(0) : app.$el;\n    panel.containerEl = panel.$containerEl[0];\n    if (!panel.containerEl) {\n      panel.$containerEl = app.$el;\n      panel.containerEl = app.$el[0];\n    }\n    let $el;\n    if (panel.params.el) {\n      $el = $(panel.params.el).eq(0);\n    } else if (panel.params.content) {\n      $el = $(panel.params.content).filter(node => node.nodeType === 1).eq(0);\n    }\n    if ($el.length === 0) return panel;\n    if ($el[0].f7Panel) return $el[0].f7Panel;\n    $el[0].f7Panel = panel;\n    let {\n      side,\n      effect,\n      resizable\n    } = panel.params;\n    if (typeof side === 'undefined') side = $el.hasClass('panel-left') ? 'left' : 'right';\n    if (typeof effect === 'undefined')\n      // eslint-disable-next-line\n      effect = $el.hasClass('panel-cover') ? 'cover' : $el.hasClass('panel-push') ? 'push' : $el.hasClass('panel-floating') ? 'floating' : 'reveal';\n    if (typeof resizable === 'undefined') resizable = $el.hasClass('panel-resizable');\n    let $backdropEl;\n    if (panel.params.backdrop && panel.params.backdropEl) {\n      $backdropEl = $(panel.params.backdropEl);\n    } else if (panel.params.backdrop) {\n      $backdropEl = panel.$containerEl.children('.panel-backdrop');\n      if ($backdropEl.length === 0) {\n        $backdropEl = $('<div class=\"panel-backdrop\"></div>');\n        panel.$containerEl.prepend($backdropEl);\n      }\n    }\n    extend(panel, {\n      app,\n      side,\n      effect,\n      resizable,\n      $el,\n      el: $el[0],\n      opened: false,\n      $backdropEl,\n      backdropEl: $backdropEl && $backdropEl[0]\n    });\n\n    // Install Modules\n    panel.useModules();\n\n    // Init\n    panel.init();\n    return panel;\n  }\n  getViewEl() {\n    const panel = this;\n    let viewEl;\n    if (panel.$containerEl.children('.views').length > 0) {\n      viewEl = panel.$containerEl.children('.views')[0];\n    } else {\n      viewEl = panel.$containerEl.children('.view')[0];\n    }\n    return viewEl;\n  }\n  setStateClasses(state) {\n    const panel = this;\n    const {\n      side,\n      el,\n      effect\n    } = panel;\n    const viewEl = panel.getViewEl();\n    const panelInView = viewEl && viewEl.contains(el);\n    const $targetEl = !viewEl || panelInView ? panel.$containerEl : $('html');\n    if (state === 'open') {\n      $targetEl.addClass(`with-panel with-panel-${panel.side}-${panel.effect}`);\n    }\n    if (state === 'before-closing') {\n      $targetEl.addClass('with-panel-closing');\n    }\n    if (state === 'closing') {\n      $targetEl.addClass('with-panel-closing');\n      $targetEl.removeClass(`with-panel with-panel-${panel.side}-${panel.effect}`);\n    }\n    if (state === 'after-closing') {\n      $targetEl.removeClass('with-panel-closing');\n    }\n    if (state === 'closed') {\n      $targetEl.removeClass(`with-panel-${side}-${effect}`);\n    }\n  }\n  enableVisibleBreakpoint() {\n    const panel = this;\n    panel.visibleBreakpointDisabled = false;\n    panel.setVisibleBreakpoint();\n    return panel;\n  }\n  disableVisibleBreakpoint() {\n    const panel = this;\n    panel.visibleBreakpointDisabled = true;\n    panel.setVisibleBreakpoint();\n    return panel;\n  }\n  toggleVisibleBreakpoint() {\n    const panel = this;\n    panel.visibleBreakpointDisabled = !panel.visibleBreakpointDisabled;\n    panel.setVisibleBreakpoint();\n    return panel;\n  }\n  setVisibleBreakpoint(emitEvents) {\n    if (emitEvents === void 0) {\n      emitEvents = true;\n    }\n    const panel = this;\n    const app = panel.app;\n    if (!panel.visibleBreakpointResizeHandler) {\n      panel.visibleBreakpointResizeHandler = function visibleBreakpointResizeHandler() {\n        panel.setVisibleBreakpoint();\n      };\n      app.on('resize', panel.visibleBreakpointResizeHandler);\n    }\n    const {\n      side,\n      $el,\n      $containerEl,\n      params,\n      visibleBreakpointDisabled\n    } = panel;\n    const breakpoint = params.visibleBreakpoint;\n    const $viewEl = $(panel.getViewEl());\n    const wasVisible = $el.hasClass('panel-in-breakpoint');\n    if ($containerEl && $containerEl.hasClass('page')) {\n      $viewEl.add($containerEl.children('.page-content, .tabs, .fab'));\n    }\n    if (app.width >= breakpoint && typeof breakpoint !== 'undefined' && breakpoint !== null && !visibleBreakpointDisabled) {\n      if (!wasVisible) {\n        panel.setStateClasses('closed');\n        $el.addClass('panel-in-breakpoint').removeClass('panel-in panel-in-collapsed');\n        panel.onOpen(false);\n        panel.onOpened();\n        $viewEl.css({\n          [`margin-${side}`]: `${$el.width()}px`\n        });\n        app.allowPanelOpen = true;\n        if (emitEvents) {\n          panel.emit('local::breakpoint panelBreakpoint', panel);\n          panel.$el.trigger('panel:breakpoint');\n        }\n      } else {\n        $viewEl.css({\n          [`margin-${side}`]: `${$el.width()}px`\n        });\n      }\n    } else if (wasVisible) {\n      $el.removeClass('panel-in-breakpoint panel-in');\n      panel.onClose();\n      panel.onClosed();\n      $viewEl.css({\n        [`margin-${side}`]: ''\n      });\n      if (emitEvents) {\n        panel.emit('local::breakpoint panelBreakpoint', panel);\n        panel.$el.trigger('panel:breakpoint');\n      }\n    }\n  }\n  enableCollapsedBreakpoint() {\n    const panel = this;\n    panel.collapsedBreakpointDisabled = false;\n    panel.setCollapsedBreakpoint();\n    return panel;\n  }\n  disableCollapsedBreakpoint() {\n    const panel = this;\n    panel.collapsedBreakpointDisabled = true;\n    panel.setCollapsedBreakpoint();\n    return panel;\n  }\n  toggleCollapsedBreakpoint() {\n    const panel = this;\n    panel.collapsedBreakpointDisabled = !panel.collapsedBreakpointDisabled;\n    panel.setCollapsedBreakpoint();\n    return panel;\n  }\n  setCollapsedBreakpoint(emitEvents) {\n    if (emitEvents === void 0) {\n      emitEvents = true;\n    }\n    const panel = this;\n    const app = panel.app;\n    if (!panel.collapsedBreakpointResizeHandler) {\n      panel.collapsedBreakpointResizeHandler = function collapsedBreakpointResizeHandler() {\n        panel.setCollapsedBreakpoint();\n      };\n      app.on('resize', panel.collapsedBreakpointResizeHandler);\n    }\n    const {\n      $el,\n      params,\n      collapsedBreakpointDisabled\n    } = panel;\n    if ($el.hasClass('panel-in-breakpoint')) return;\n    const breakpoint = params.collapsedBreakpoint;\n    const wasVisible = $el.hasClass('panel-in-collapsed');\n    if (app.width >= breakpoint && typeof breakpoint !== 'undefined' && breakpoint !== null && !collapsedBreakpointDisabled) {\n      if (!wasVisible) {\n        panel.setStateClasses('closed');\n        $el.addClass('panel-in-collapsed').removeClass('panel-in');\n        panel.collapsed = true;\n        app.allowPanelOpen = true;\n        if (emitEvents) {\n          panel.emit('local::collapsedBreakpoint panelCollapsedBreakpoint', panel);\n          panel.$el.trigger('panel:collapsedbreakpoint');\n        }\n      }\n    } else if (wasVisible) {\n      $el.removeClass('panel-in-collapsed panel-in');\n      panel.collapsed = false;\n      if (emitEvents) {\n        panel.emit('local::collapsedBreakpoint panelCollapsedBreakpoint', panel);\n        panel.$el.trigger('panel:collapsedbreakpoint');\n      }\n    }\n  }\n  enableResizable() {\n    const panel = this;\n    if (panel.resizableInitialized) {\n      panel.resizable = true;\n      panel.$el.addClass('panel-resizable');\n    } else {\n      resizablePanel(panel);\n    }\n    return panel;\n  }\n  disableResizable() {\n    const panel = this;\n    panel.resizable = false;\n    panel.$el.removeClass('panel-resizable');\n    return panel;\n  }\n  enableSwipe() {\n    const panel = this;\n    if (panel.swipeInitialized) {\n      panel.swipeable = true;\n    } else {\n      swipePanel(panel);\n    }\n    return panel;\n  }\n  disableSwipe() {\n    const panel = this;\n    panel.swipeable = false;\n    return panel;\n  }\n  onOpen(modifyHtmlClasses) {\n    if (modifyHtmlClasses === void 0) {\n      modifyHtmlClasses = true;\n    }\n    const panel = this;\n    // eslint-disable-next-line\n    panel._openTransitionStarted = false;\n    const app = panel.app;\n    panel.opened = true;\n    app.panel.allowOpen = false;\n    panel.$el.trigger('panel:beforeopen');\n    panel.emit('local::beforeOpen panelBeforeOpen', panel);\n    if (modifyHtmlClasses) {\n      panel.setStateClasses('open');\n    }\n    panel.$el.trigger('panel:open');\n    panel.emit('local::open panelOpen', panel);\n  }\n  onOpened() {\n    const panel = this;\n    const app = panel.app;\n    app.panel.allowOpen = true;\n    panel.$el.trigger('panel:opened');\n    panel.emit('local::opened panelOpened', panel);\n  }\n  onClose() {\n    const panel = this;\n    const app = panel.app;\n    panel.opened = false;\n    app.panel.allowOpen = false;\n    panel.$el.trigger('panel:beforeclose');\n    panel.emit('local::beforeClose panelBeforeClose', panel);\n    panel.setStateClasses('closing');\n    panel.$el.trigger('panel:close');\n    panel.emit('local::close panelClose', panel);\n  }\n  onClosed() {\n    const panel = this;\n    const app = panel.app;\n    app.panel.allowOpen = true;\n    panel.setStateClasses('after-closing');\n    panel.$el.removeClass('panel-out');\n    if (panel.$backdropEl) {\n      const otherPanel = app.panel.get('.panel-in');\n      const shouldHideBackdrop = !otherPanel || otherPanel && !otherPanel.$backdropEl;\n      if (shouldHideBackdrop) {\n        panel.$backdropEl.removeClass('panel-backdrop-in');\n      }\n    }\n    panel.$el.trigger('panel:closed');\n    panel.emit('local::closed panelClosed', panel);\n  }\n  toggle(animate) {\n    if (animate === void 0) {\n      animate = true;\n    }\n    const panel = this;\n    const breakpoint = panel.params.visibleBreakpoint;\n    const app = panel.app;\n    if (app.width >= breakpoint && typeof breakpoint !== 'undefined' && breakpoint !== null) {\n      return panel.toggleVisibleBreakpoint();\n    }\n    if (panel.opened) panel.close(animate);else panel.open(animate);\n    return panel;\n  }\n  insertToRoot() {\n    const panel = this;\n    const document = getDocument();\n    const {\n      $el,\n      $backdropEl,\n      $containerEl\n    } = panel;\n    const $panelParentEl = $el.parent();\n    const wasInDom = $el.parents(document).length > 0;\n    if (!$panelParentEl.is($containerEl) || $el.prevAll('.views, .view').length) {\n      const $insertBeforeEl = $containerEl.children('.panel, .views, .view').eq(0);\n      const $insertAfterEl = $containerEl.children('.panel-backdrop').eq(0);\n      if ($insertBeforeEl.length) {\n        $el.insertBefore($insertBeforeEl);\n      } else if ($insertAfterEl) {\n        $el.insertBefore($insertAfterEl);\n      } else {\n        $containerEl.prepend($el);\n      }\n      if ($backdropEl && $backdropEl.length && (!$backdropEl.parent().is($containerEl) && $backdropEl.nextAll('.panel').length === 0 || $backdropEl.parent().is($containerEl) && $backdropEl.nextAll('.panel').length === 0)) {\n        $backdropEl.insertBefore($el);\n      }\n      panel.once('panelClosed', () => {\n        if (wasInDom) {\n          $panelParentEl.append($el);\n        } else {\n          $el.remove();\n        }\n      });\n    }\n  }\n  open(animate) {\n    if (animate === void 0) {\n      animate = true;\n    }\n    const panel = this;\n    const app = panel.app;\n    if (!app.panel.allowOpen) return false;\n    const {\n      effect,\n      $el,\n      $backdropEl,\n      opened,\n      $containerEl\n    } = panel;\n    if (!$el || $el.hasClass('panel-in')) {\n      return panel;\n    }\n    panel.insertToRoot();\n\n    // Ignore if opened\n    if (opened || $el.hasClass('panel-in-breakpoint') || $el.hasClass('panel-in')) return false;\n\n    // Close if some panel is opened\n    const otherOpenedPanel = app.panel.get('.panel-in');\n    if (otherOpenedPanel && otherOpenedPanel !== panel) {\n      otherOpenedPanel.close(animate);\n    }\n    $el[animate ? 'removeClass' : 'addClass']('not-animated');\n    $el.addClass('panel-in');\n    if ($backdropEl) {\n      $backdropEl.addClass('panel-backdrop-in');\n      $backdropEl[animate ? 'removeClass' : 'addClass']('not-animated');\n    }\n    if (['cover', 'push', 'floating'].includes(panel.effect)) {\n      /* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_clientLeft\"] }] */\n      panel._clientLeft = $el[0].clientLeft;\n    }\n\n    // Transitionend\n    const $viewEl = $(panel.getViewEl());\n    if ($containerEl && $containerEl.hasClass('page')) {\n      $viewEl.add($containerEl.children('.page-content, .tabs'));\n    }\n    const transitionEndTarget = effect === 'reveal' ? $viewEl : $el;\n    function panelTransitionStart() {\n      transitionEndTarget.transitionStart(() => {\n        // eslint-disable-next-line\n        panel._openTransitionStarted = true;\n      });\n    }\n    function panelTransitionEnd() {\n      transitionEndTarget.transitionEnd(e => {\n        if ($(e.target).is(transitionEndTarget)) {\n          if ($el.hasClass('panel-out')) {\n            panel.onClosed();\n          } else {\n            panel.onOpened();\n          }\n        } else panelTransitionEnd();\n      });\n    }\n    if (animate) {\n      if ($backdropEl) {\n        $backdropEl.removeClass('not-animated');\n      }\n      panelTransitionStart();\n      panelTransitionEnd();\n      $el.removeClass('panel-out not-animated').addClass('panel-in');\n      panel.onOpen();\n    } else {\n      if ($backdropEl) {\n        $backdropEl.addClass('not-animated');\n      }\n      $el.removeClass('panel-out').addClass('panel-in not-animated');\n      panel.onOpen();\n      panel.onOpened();\n      // eslint-disable-next-line\n      panel._openTransitionStarted = true;\n    }\n    return true;\n  }\n  close(animate) {\n    if (animate === void 0) {\n      animate = true;\n    }\n    const panel = this;\n    const {\n      effect,\n      $el,\n      $backdropEl,\n      opened,\n      $containerEl\n    } = panel;\n    if (!opened || $el.hasClass('panel-in-breakpoint') || !$el.hasClass('panel-in')) return panel;\n    $el[animate ? 'removeClass' : 'addClass']('not-animated');\n    if ($backdropEl) {\n      $backdropEl[animate ? 'removeClass' : 'addClass']('not-animated');\n    }\n    const $viewEl = $(panel.getViewEl());\n    if ($containerEl && $containerEl.hasClass('page')) {\n      $viewEl.add($containerEl.children('.page-content, .tabs'));\n    }\n    const transitionEndTarget = effect === 'reveal' ? $viewEl : $el;\n    // eslint-disable-next-line\n    if (!panel._openTransitionStarted) {\n      // eslint-disable-next-line\n      animate = false;\n    }\n    function transitionEnd() {\n      if ($el.hasClass('panel-out')) {\n        panel.onClosed();\n      } else if ($el.hasClass('panel-in')) {\n        panel.onOpened();\n      }\n      panel.setStateClasses('after-closing');\n    }\n    if (animate) {\n      transitionEndTarget.transitionEnd(() => {\n        transitionEnd();\n      });\n      $el.removeClass('panel-in').addClass('panel-out');\n      // Emit close\n      panel.onClose();\n    } else {\n      $el.addClass('not-animated').removeClass('panel-in').addClass('panel-out');\n      // Emit close\n      panel.onClose();\n      panel.onClosed();\n    }\n    return panel;\n  }\n  init() {\n    const panel = this;\n    // const app = panel.app;\n    if (typeof panel.params.visibleBreakpoint !== 'undefined') {\n      panel.setVisibleBreakpoint();\n    }\n    if (typeof panel.params.collapsedBreakpoint !== 'undefined') {\n      panel.setCollapsedBreakpoint();\n    }\n    if (panel.params.swipe) {\n      panel.enableSwipe();\n    }\n    if (panel.resizable) {\n      panel.enableResizable();\n    }\n  }\n  destroy() {\n    let panel = this;\n    const app = panel.app;\n    const {\n      $containerEl\n    } = panel;\n    if (!panel.$el) {\n      // Panel already destroyed\n      return;\n    }\n    panel.emit('local::beforeDestroy panelBeforeDestroy', panel);\n    panel.$el.trigger('panel:beforedestroy');\n    if (panel.visibleBreakpointResizeHandler) {\n      app.off('resize', panel.visibleBreakpointResizeHandler);\n    }\n    if (panel.collapsedBreakpointResizeHandler) {\n      app.off('resize', panel.collapsedBreakpointResizeHandler);\n    }\n    if (panel.$el.hasClass('panel-in-breakpoint') || panel.$el.hasClass('panel-in-collapsed')) {\n      const $viewEl = $(panel.getViewEl());\n      if ($containerEl && $containerEl.hasClass('page')) {\n        $viewEl.add($containerEl.children('.page-content, .tabs'));\n      }\n      panel.$el.removeClass('panel-in-breakpoint panel-in-collapsed panel-in');\n      $viewEl.css({\n        [`margin-${panel.side}`]: ''\n      });\n      panel.emit('local::breakpoint panelBreakpoint', panel);\n      panel.$el.trigger('panel:breakpoint');\n    }\n    panel.$el.trigger('panel:destroy');\n    panel.emit('local::destroy panelDestroy', panel);\n    if (panel.el) {\n      panel.el.f7Panel = null;\n      delete panel.el.f7Panel;\n    }\n    deleteProps(panel);\n    panel = null;\n  }\n}\nexport default Panel;", "import $ from '../../shared/dom7.js';\nimport { extend } from '../../shared/utils.js';\nimport Panel from './panel-class.js';\nexport default {\n  name: 'panel',\n  params: {\n    panel: {\n      opened: undefined,\n      // default based on panel-in class\n      side: undefined,\n      // default based on panel class\n      effect: undefined,\n      // default based on panel class\n      resizable: undefined,\n      // default based on panel-resizable class\n      backdrop: true,\n      backdropEl: undefined,\n      visibleBreakpoint: undefined,\n      collapsedBreakpoint: undefined,\n      swipe: false,\n      // or true\n      swipeNoFollow: false,\n      // or true\n      swipeOnlyClose: false,\n      swipeActiveArea: 0,\n      swipeThreshold: 0,\n      closeByBackdropClick: true,\n      containerEl: undefined\n    }\n  },\n  static: {\n    Panel\n  },\n  create() {\n    const app = this;\n    extend(app, {\n      panel: {\n        allowOpen: true,\n        create(params) {\n          return new Panel(app, params);\n        },\n        get(el) {\n          if (el === void 0) {\n            el = '.panel';\n          }\n          if (el instanceof Panel) return el;\n          if (el === 'left' || el === 'right') el = `.panel-${el}`; // eslint-disable-line\n          const $el = $(el);\n          if ($el.length === 0 || $el.length > 1) return undefined;\n          return $el[0].f7Panel;\n        },\n        destroy(el) {\n          if (el === void 0) {\n            el = '.panel';\n          }\n          const panel = app.panel.get(el);\n          if (panel && panel.destroy) return panel.destroy();\n          return undefined;\n        },\n        open(el, animate) {\n          if (el === void 0) {\n            el = '.panel';\n          }\n          if (el === 'left' || el === 'right') el = `.panel-${el}`; // eslint-disable-line\n          let panel = app.panel.get(el);\n          if (panel && panel.open) return panel.open(animate);\n          if (!panel) {\n            panel = app.panel.create({\n              el\n            });\n            return panel.open(animate);\n          }\n          return undefined;\n        },\n        close(el, animate) {\n          if (el === void 0) {\n            el = '.panel-in';\n          }\n          if (el === 'left' || el === 'right') el = `.panel-${el}`; // eslint-disable-line\n          let panel = app.panel.get(el);\n          if (panel && panel.open) return panel.close(animate);\n          if (!panel) {\n            panel = app.panel.create({\n              el\n            });\n            return panel.close(animate);\n          }\n          return undefined;\n        },\n        toggle(el, animate) {\n          if (el === void 0) {\n            el = '.panel';\n          }\n          if (el === 'left' || el === 'right') el = `.panel-${el}`; // eslint-disable-line\n          let panel = app.panel.get(el);\n          if (panel && panel.toggle) return panel.toggle(animate);\n          if (!panel) {\n            panel = app.panel.create({\n              el\n            });\n            return panel.toggle(animate);\n          }\n          return undefined;\n        }\n      }\n    });\n  },\n  on: {\n    init() {\n      const app = this;\n      $('.panel-init').each(panelEl => {\n        const params = Object.assign({\n          el: panelEl\n        }, $(panelEl).dataset() || {});\n        app.panel.create(params);\n      });\n    },\n    pageInit(page) {\n      const app = this;\n      page.$el.find('.panel-init').each(panelEl => {\n        const params = Object.assign({\n          el: panelEl\n        }, $(panelEl).dataset() || {});\n        app.panel.create(params);\n      });\n    },\n    pageBeforeRemove(page) {\n      const app = this;\n      page.$el.find('.panel-init').each(panelEl => {\n        const panel = app.panel.get(panelEl);\n        if (panel && panel.destroy) panel.destroy();\n      });\n    }\n  },\n  vnode: {\n    'panel-init': {\n      insert(vnode) {\n        const app = this;\n        const panelEl = vnode.elm;\n        const params = Object.assign({\n          el: panelEl\n        }, $(panelEl).dataset() || {});\n        app.panel.create(params);\n      },\n      destroy(vnode) {\n        const app = this;\n        const panelEl = vnode.elm;\n        const panel = app.panel.get(panelEl);\n        if (panel && panel.destroy) panel.destroy();\n      }\n    }\n  },\n  clicks: {\n    '.panel-open': function open(clickedEl, data) {\n      if (data === void 0) {\n        data = {};\n      }\n      const app = this;\n      app.panel.open(data.panel, data.animate);\n    },\n    '.panel-close': function close(clickedEl, data) {\n      if (data === void 0) {\n        data = {};\n      }\n      const app = this;\n      app.panel.close(data.panel, data.animate);\n    },\n    '.panel-toggle': function close(clickedEl, data) {\n      if (data === void 0) {\n        data = {};\n      }\n      const app = this;\n      app.panel.toggle(data.panel, data.animate);\n    },\n    '.panel-backdrop': function close() {\n      const app = this;\n      const $panelEl = $('.panel-in:not(.panel-out)');\n      if (!$panelEl.length) return;\n      const instance = $panelEl[0] && $panelEl[0].f7Panel;\n      $panelEl.trigger('panel:backdrop-click');\n      if (instance) {\n        instance.emit('backdropClick', instance);\n      }\n      app.emit('panelBackdropClick', instance || $panelEl[0]);\n      if (instance && instance.params.closeByBackdropClick === false) return;\n      if (app.params.panel.closeByBackdropClick) app.panel.close();\n    }\n  }\n};"],
  "mappings": "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",
  "names": ["close"]
}
